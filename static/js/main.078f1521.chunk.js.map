{"version":3,"sources":["images/header-logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","components/PopupWithForm.js","components/FormField.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","utils/api.js","utils/constants.js","components/App.js","index.js"],"names":["Header","className","src","headerLogo","alt","CurrentUserContext","createContext","Card","props","data","name","link","likes","owner","currentUser","useContext","isOwn","_id","isLiked","some","like","onClick","onCardClick","type","onCardLike","aria-label","length","onCardDelete","Main","cards","onEditProfile","onAddCard","onEditAvatar","avatar","about","map","card","Footer","Date","getFullYear","ImagePopup","onClose","PopupWithForm","isOpen","onSubmit","title","btnSubmitCaption","children","FormField","forwardRef","ref","id","defaultProps","required","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","evt","preventDefault","value","onChange","target","placeholder","minLength","maxLength","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","AddPlacePopup","setLink","options","this","_baseUrl","baseUrl","_headers","headers","promise","then","res","ok","json","Promise","reject","status","_promiseHandler","fetch","method","body","JSON","stringify","cardId","authorization","App","setCurrentUser","setCards","isPopupProfileOpen","setIsPopupProfileOpen","isPopupCardOpen","setIsPopupCardOpen","isPopupAvatarOpen","setIsPopupAvatarOpen","selectedCard","setSelectedCard","closeAllPopups","promises","api","getUserInfo","getInitialCards","all","userInfo","initialCards","catch","err","console","log","Provider","changeCardLikeStatus","newCard","currCard","deleteCard","filter","setUserInfo","addCard","setUserAvatar","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAAe,MAA0B,wC,OCU1BA,MARf,WACE,OACE,wBAAQC,UAAU,SAAlB,SACE,qBAAKA,UAAU,eAAeC,IAAKC,EAAYC,IAAI,4ECH5CC,EAAqBC,0BCmDnBC,MAjDf,SAAcC,GAAQ,IAAD,EAMfA,EAAMC,KAJRC,EAFiB,EAEjBA,KACAC,EAHiB,EAGjBA,KACAC,EAJiB,EAIjBA,MACAC,EALiB,EAKjBA,MAGIC,EAAcC,qBAAWV,GAEzBW,EAAQH,EAAMI,MAAQH,EAAYG,IAClCC,EAAUN,EAAMO,MAAK,SAAAC,GAAI,OAAIA,EAAKH,MAAQH,EAAYG,OAM5D,OACE,qBAAIhB,UAAU,cAAd,UACE,qBAAKA,UAAU,eAAeC,IAAKS,EAAMP,IAAKM,EAAMW,QANhC,kBAAMb,EAAMc,YAAY,CAAEZ,OAAMC,YAOpD,oBAAIV,UAAU,eAAd,SAA8BS,IAC5B,sBAAKT,UAAU,wBAAf,UACE,wBACEA,UAAS,6BAAwBiB,EAAU,6BAA+B,IAC1EK,KAAK,SACLF,QAXc,kBAAMb,EAAMgB,WAAWhB,EAAMC,OAY3CgB,aAAW,+CAGb,sBAAMxB,UAAU,sBAAhB,SAAuCW,EAAMc,YAEhDV,GACC,wBACEf,UAAU,8BACVsB,KAAK,SACLF,QApBkB,kBAAMb,EAAMmB,aAAanB,EAAMC,OAqBjDgB,aAAW,mDCqBNG,MAxDf,SAAcpB,GAAQ,IAElBqB,EAOErB,EAPFqB,MACAC,EAMEtB,EANFsB,cACAC,EAKEvB,EALFuB,UACAC,EAIExB,EAJFwB,aACAV,EAGEd,EAHFc,YACAE,EAEEhB,EAFFgB,WACAG,EACEnB,EADFmB,aAGIb,EAAcC,qBAAWV,GAE/B,OACE,uBAAMJ,UAAU,UAAhB,UACE,0BAASA,UAAU,UAAnB,UACE,wBAAQA,UAAU,8BAA8BsB,KAAK,SAASE,aAAW,wFAAkBJ,QAASW,EAApG,SACE,qBAAK/B,UAAU,kBAAkBC,IAAG,OAAEY,QAAF,IAAEA,OAAF,EAAEA,EAAamB,OAAQ7B,IAAI,2CAEjE,sBAAKH,UAAU,gBAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,oBAAIA,UAAU,gBAAd,gBAA+Ba,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAaJ,OAC5C,wBAAQT,UAAU,sCAAsCsB,KAAK,SAASE,aAAW,4HAAwBJ,QAASS,OAEpH,mBAAG7B,UAAU,eAAb,gBAA6Ba,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAaoB,WAE5C,wBAAQjC,UAAU,kCAAkCsB,KAAK,SAASE,aAAW,oGAAoBJ,QAASU,OAG5G,yBAAS9B,UAAU,QAAnB,SACE,oBAAIA,UAAU,cAAd,SACG4B,EAAMM,KAAI,SAAAC,GAAI,OACb,cAAC,EAAD,CAEE3B,KAAM2B,EACNd,YAAaA,EACbE,WAAYA,EACZG,aAAcA,GAJTS,EAAKnB,gBC9BToB,MARf,WACE,OACE,wBAAQpC,UAAU,SAAlB,SACE,oBAAGA,UAAU,oBAAb,mBAAyC,IAAIqC,MAAOC,cAApD,sBC0BSC,MA3Bf,SAAoBhC,GAAQ,IAExB4B,EAEE5B,EAFF4B,KACAK,EACEjC,EADFiC,QAGF,OACE,yBAASxC,UAAS,8CAAyCmC,EAAO,eAAiB,IAAnF,SACE,sBAAKnC,UAAU,mBAAf,UACE,yBAAQA,UAAU,yBAAlB,UACE,qBAAKA,UAAU,eAAeC,IAAG,OAAEkC,QAAF,IAAEA,OAAF,EAAEA,EAAMzB,KAAMP,IAAG,OAAEgC,QAAF,IAAEA,OAAF,EAAEA,EAAM1B,OAC1D,4BAAYT,UAAU,uBAAtB,gBAA8CmC,QAA9C,IAA8CA,OAA9C,EAA8CA,EAAM1B,UAEtD,wBAAQT,UAAU,6BAA6BsB,KAAK,SAASE,aAAW,6CAAUJ,QAASoB,UCsBpFC,MAnCf,SAAuBlC,GAAQ,IAE3BmC,EAOEnC,EAPFmC,OACAF,EAMEjC,EANFiC,QACAG,EAKEpC,EALFoC,SACAlC,EAIEF,EAJFE,KACAmC,EAGErC,EAHFqC,MACAC,EAEEtC,EAFFsC,iBACAC,EACEvC,EADFuC,SAGF,OACE,yBAAS9C,UAAS,sBAAiBS,EAAjB,YAAyBiC,EAAS,eAAiB,IAArE,SACE,sBAAK1C,UAAU,mBAAf,UACE,uBAAMA,UAAS,oBAAeS,GAAQA,KAAI,eAAUA,GAAQkC,SAAUA,EAAtE,UACE,oBAAI3C,UAAU,gBAAd,SAA+B4C,IAC9BE,EACD,wBAAQ9C,UAAU,sBAAsBsB,KAAK,SAA7C,SAAuDuB,OAEzD,wBAAQ7C,UAAU,6BAA6BsB,KAAK,SAASE,aAAW,6CAAUJ,QAASoB,U,QClB7FO,EAAYC,sBAAW,SAACzC,EAAO0C,GACnC,IAAMxC,EAAOF,EAAME,KAEnB,OACE,wBAAOT,UAAU,cAAjB,UACE,mCAAOA,UAAU,cAAckD,GAAIzC,EAAMwC,IAAKA,GAAS1C,IACvD,sBAAMP,UAAS,4BAAuBS,EAAvB,kBAKrBsC,EAAUI,aAAe,CACvBC,UAAU,GAYGL,QCmCAM,MAxDf,SAA0B9C,GAAQ,IAE9BmC,EAGEnC,EAHFmC,OACAF,EAEEjC,EAFFiC,QACAc,EACE/C,EADF+C,aAJ6B,EAOPC,mBAAS,IAPF,mBAOxB9C,EAPwB,KAOlB+C,EAPkB,OAQOD,mBAAS,IARhB,mBAQxBE,EARwB,KAQXC,EARW,KAUzB7C,EAAcC,qBAAWV,GAyB/B,OAvBAuD,qBAAU,WACRH,EAAQ3C,EAAYJ,MACpBiD,EAAe7C,EAAYoB,SAC1B,CAACpB,IAqBF,eAAC,EAAD,CACE6B,OAAQA,EACRF,QAlBgB,WAClBgB,EAAQ3C,EAAYJ,MACpBiD,EAAe7C,EAAYoB,OAC3BO,KAgBEG,SAbiB,SAACiB,GACpBA,EAAIC,iBAEJP,EAAa,CACX7C,OACAwB,MAAOwB,KASPhD,KAAK,UACLmC,MAAM,4HACNC,iBAAiB,yDANnB,UAQE,cAAC,EAAD,CAAWvB,KAAK,OAAOb,KAAK,eAAeqD,MAAOrD,GAAQ,GAAIsD,SA3BzC,SAACH,GAAD,OAASJ,EAAQI,EAAII,OAAOF,QA2ByCG,YAAY,qBAAMC,UAAW,EAAGC,UAAW,KACrI,cAAC,EAAD,CAAW7C,KAAK,OAAOb,KAAK,cAAcqD,MAAOL,GAAe,GAAIM,SA3BxC,SAACH,GAAD,OAASF,EAAeE,EAAII,OAAOF,QA2BwCG,YAAY,kCAASC,UAAW,EAAGC,UAAW,UCN5IC,MAxCf,SAAyB7D,GAAQ,IAE7BmC,EAGEnC,EAHFmC,OACAF,EAEEjC,EAFFiC,QACA6B,EACE9D,EADF8D,eAGIC,EAAYC,mBAalB,OAXAZ,qBAAU,WACHjB,IACH4B,EAAUE,QAAQV,MAAQ,MAE3B,CAACpB,IAQF,cAAC,EAAD,CACEA,OAAQA,EACRF,QAASA,EACTG,SATiB,SAACiB,GACpBA,EAAIC,iBACJQ,EAAeC,EAAUE,QAAQV,QAQ/BrD,KAAK,SACLmC,MAAM,wFACNC,iBAAiB,yDANnB,SAQE,cAAC,EAAD,CAAWvB,KAAK,MAAMb,KAAK,cAAcwD,YAAY,yFAAmBhB,IAAKqB,OCiBpEG,MA9Cf,SAAuBlE,GAAQ,IAE3BmC,EAGEnC,EAHFmC,OACAF,EAEEjC,EAFFiC,QACAV,EACEvB,EADFuB,UAJ0B,EAOJyB,mBAAS,IAPL,mBAOrB9C,EAPqB,KAOf+C,EAPe,OAQJD,mBAAS,IARL,mBAQrB7C,EARqB,KAQfgE,EARe,KAyB5B,OAZAf,qBAAU,WACHjB,IACHc,EAAQ,IACRkB,EAAQ,OAET,CAAChC,IAQF,eAAC,EAAD,CACEA,OAAQA,EACRF,QAASA,EACTG,SATiB,SAACiB,GACpBA,EAAIC,iBACJ/B,EAAU,CAAErB,OAAKC,UAQfD,KAAK,OACLmC,MAAM,gEACNC,iBAAiB,6CANnB,UAQE,cAAC,EAAD,CAAWvB,KAAK,OAAOb,KAAK,YAAYqD,MAAOrD,GAAQ,GAAIsD,SAxBtC,SAACH,GAAD,OAASJ,EAAQI,EAAII,OAAOF,QAwBsCG,YAAY,mDAAWC,UAAW,EAAGC,UAAW,KACvI,cAAC,EAAD,CAAW7C,KAAK,MAAMb,KAAK,YAAYqD,MAAOpD,GAAQ,GAAIqD,SAxBrC,SAACH,GAAD,OAASc,EAAQd,EAAII,OAAOF,QAwBqCG,YAAY,2G,cCqCzF,M,WA1Eb,WAAYU,GAAU,oBACpBC,KAAKC,SAAWF,EAAQG,QACxBF,KAAKG,SAAWJ,EAAQK,Q,mDAG1B,SAAgBC,GACd,OAAOA,EACJC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,GAAKD,EAAIE,OAASC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,yBAGrE,WACE,OAAOZ,KAAKa,gBAAgBC,MAAM,GAAD,OAAId,KAAKC,SAAT,aAA8B,CAC7DG,QAASJ,KAAKG,c,yBAIlB,SAAYtE,EAAMwB,GAChB,OAAO2C,KAAKa,gBAAgBC,MAAM,GAAD,OAAId,KAAKC,SAAT,aAA8B,CAC7Dc,OAAQ,QACRX,QAASJ,KAAKG,SACda,KAAMC,KAAKC,UAAU,CACnBrF,KAAMA,EACNwB,MAAOA,S,2BAKb,SAAcD,GACZ,OAAO4C,KAAKa,gBAAgBC,MAAM,GAAD,OAAId,KAAKC,SAAT,oBAAqC,CACpEc,OAAQ,QACRX,QAASJ,KAAKG,SACda,KAAMC,KAAKC,UAAU,CACnB9D,OAAQA,S,6BAKd,WACE,OAAO4C,KAAKa,gBAAgBC,MAAM,GAAD,OAAId,KAAKC,SAAT,UAA2B,CAC1DG,QAASJ,KAAKG,c,qBAIlB,SAAQtE,EAAMC,GACZ,OAAOkE,KAAKa,gBAAgBC,MAAM,GAAD,OAAId,KAAKC,SAAT,UAA2B,CAC1Dc,OAAQ,OACRX,QAASJ,KAAKG,SACda,KAAMC,KAAKC,UAAU,CACnBrF,KAAMA,EACNC,KAAMA,S,wBAKZ,SAAWqF,GACT,OAAOnB,KAAKa,gBAAgBC,MAAM,GAAD,OAAId,KAAKC,SAAT,kBAA2BkB,GAAU,CACpEJ,OAAQ,SACRX,QAASJ,KAAKG,c,kCAIlB,SAAqBgB,EAAQ9E,GAC3B,OAAOA,EACH2D,KAAKa,gBAAgBC,MAAM,GAAD,OAAId,KAAKC,SAAT,wBAAiCkB,GAAU,CACrEJ,OAAQ,SACRX,QAASJ,KAAKG,YAEdH,KAAKa,gBAAgBC,MAAM,GAAD,OAAId,KAAKC,SAAT,wBAAiCkB,GAAU,CACnEJ,OAAQ,MACRX,QAASJ,KAAKG,gB,KAKT,CC7EW,CACxBD,QAAS,8CACTE,QAAS,CACPgB,cAAe,uCACf,eAAgB,sBC2HLC,MApHf,WAAgB,IAAD,EACyB1C,mBAAS,IADlC,mBACN1C,EADM,KACOqF,EADP,OAEa3C,mBAAS,IAFtB,mBAEN3B,EAFM,KAECuE,EAFD,OAIuC5C,oBAAS,GAJhD,mBAIN6C,EAJM,KAIcC,EAJd,OAKiC9C,oBAAS,GAL1C,mBAKN+C,EALM,KAKWC,EALX,OAMqChD,oBAAS,GAN9C,mBAMNiD,EANM,KAMaC,EANb,OAO2BlD,mBAAS,MAPpC,mBAONmD,EAPM,KAOQC,EAPR,KAaPC,EAAiB,WACrBP,GAAsB,GACtBE,GAAmB,GACnBE,GAAqB,GACrBE,EAAgB,OA2DlB,OAxDAhD,qBAAU,WACR,IAAMkD,EAAW,CAACC,EAAIC,cAAeD,EAAIE,mBAEzC1B,QAAQ2B,IAAIJ,GACT3B,MAAK,YAA+B,IAAD,mBAA5BgC,EAA4B,KAAlBC,EAAkB,KAClCjB,EAAegB,GACff,EAASgB,MAEVC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC3B,IAgDD,eAACjH,EAAmBoH,SAApB,CAA6B1D,MAAOjD,EAApC,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CACEe,MAAOA,EACPC,cAxE+B,kBAAMwE,GAAsB,IAyE3DvE,UAxE2B,kBAAMyE,GAAmB,IAyEpDxE,aAxE8B,kBAAM0E,GAAqB,IAyEzDpF,YAAasF,EACbpF,WAtDiB,SAACY,GACtB,IAAMlB,EAAUkB,EAAKxB,MAAMO,MAAK,SAAAC,GAAI,OAAIA,EAAKH,MAAQH,EAAYG,OAEjE8F,EAAIW,qBAAqBtF,EAAKnB,IAAKC,GAChCiE,MAAK,SAAAwC,GACJvB,GAAS,SAAAvE,GAAK,OAAIA,EAAMM,KAAI,SAAAyF,GAAQ,OAAIA,EAAS3G,MAAQmB,EAAKnB,IAAM0G,EAAUC,WAE/EP,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAgDxB3F,aA7CmB,SAACS,GACxB2E,EAAIc,WAAWzF,EAAKnB,KACjBkE,MAAK,WACJiB,EAASvE,EAAMiG,QAAO,SAAAF,GAAQ,OAAIA,EAAS3G,MAAQmB,EAAKnB,WAEzDoG,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,SA0C1B,cAAC,EAAD,IAEA,cAAC,EAAD,CACE3E,OAAQ0D,EACR5D,QAASoE,EACTtD,aA5CmB,SAAC,GAAmB,IAAlB7C,EAAiB,EAAjBA,KAAMwB,EAAW,EAAXA,MAC/B6E,EAAIgB,YAAYrH,EAAMwB,GACrBiD,MAAK,SAAAgC,GACJhB,EAAegB,GACfN,OAEDQ,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,SAyCxB,cAAC,EAAD,CACE3E,OAAQ4D,EACR9D,QAASoE,EACT9E,UAhCgB,SAAC,GAAkB,IAAjBrB,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KAC5BoG,EAAIiB,QAAQtH,EAAMC,GACfwE,MAAK,SAAAwC,GACJvB,EAAS,CAACuB,GAAF,mBAAc9F,KACtBgF,OAEDQ,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,SA6B1B,cAAC,EAAD,CACE3E,OAAQ8D,EACRhE,QAASoE,EACTvC,eA/CqB,SAACrC,GAC1B8E,EAAIkB,cAAchG,GACfkD,MAAK,SAAAgC,GACJhB,EAAegB,GACfN,OAEDQ,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,SA4C1B,cAAC,EAAD,CACElF,KAAMuE,EACNlE,QAASoE,QCpHjBqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.078f1521.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header-logo.bbe2a6ea.svg\";","import headerLogo from '../images/header-logo.svg';\n\nfunction Header() {\n  return (\n    <header className='header'>\n      <img className='header__logo' src={headerLogo} alt='Место: Россия' />\n    </header>\n  );\n}\n\nexport default Header;\n","import { createContext } from 'react';\n\nexport const CurrentUserContext = createContext();\nexport const initialUser = {\n  name: '',\n  about: '',\n  avatar: ''\n}\n","import { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card(props) {\n  const {\n    name,\n    link,\n    likes,\n    owner\n  } = props.data;\n\n  const currentUser = useContext(CurrentUserContext);\n\n  const isOwn = owner._id === currentUser._id;\n  const isLiked = likes.some(like => like._id === currentUser._id);\n\n  const handleCardClick = () => props.onCardClick({ name, link });\n  const handleLikeClick = () => props.onCardLike(props.data);\n  const handleDeleteClick = () => props.onCardDelete(props.data);\n\n  return (\n    <li className='cards__item'>\n      <img className='cards__image' src={link} alt={name} onClick={handleCardClick} />\n      <h2 className='cards__title'>{name}</h2>\n        <div className='cards__like-container'>\n          <button\n            className={`cards__button-like ${isLiked ? ' cards__button-like_active' : ''}`}\n            type='button'\n            onClick={handleLikeClick}\n            aria-label='Оценить'\n          >\n          </button>\n          <span className='cards__like-counter'>{likes.length}</span>\n        </div>\n      {isOwn &&\n        <button\n          className='button cards__button-delete'\n          type='button'\n          onClick={handleDeleteClick}\n          aria-label='Удалить'>\n        </button>}\n    </li>\n  );\n}\n\nCard.propTypes = {\n  data: PropTypes.object.isRequired,\n  onCardClick: PropTypes.func.isRequired,\n  onCardLike: PropTypes.func.isRequired,\n  onCardDelete: PropTypes.func.isRequired\n};\n\nexport default Card;\n","import { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main(props) {\n  const {\n    cards,\n    onEditProfile,\n    onAddCard,\n    onEditAvatar,\n    onCardClick,\n    onCardLike,\n    onCardDelete\n  } = props;\n\n  const currentUser = useContext(CurrentUserContext);\n\n  return (\n    <main className='content'>\n      <section className='profile'>\n        <button className='profile__button-edit-avatar' type='button' aria-label='Обновить аватар' onClick={onEditAvatar}>\n          <img className='profile__avatar' src={currentUser?.avatar} alt='Аватар' />\n        </button>\n        <div className='profile__info'>\n          <div className='profile__container'>\n            <h1 className='profile__name'>{currentUser?.name}</h1>\n            <button className='button profile__button-edit-profile' type='button' aria-label='Редактировать профиль' onClick={onEditProfile}></button>\n          </div>\n          <p className='profile__job'>{currentUser?.about}</p>\n        </div>\n        <button className='button profile__button-add-card' type='button' aria-label='Добавить карточку' onClick={onAddCard}></button>\n      </section>\n\n      <section className='cards'>\n        <ul className='cards__list'>\n          {cards.map(card => (\n            <Card\n              key={card._id}\n              data={card}\n              onCardClick={onCardClick}\n              onCardLike={onCardLike}\n              onCardDelete={onCardDelete}\n            />\n          ))}\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nMain.propTypes = {\n  cards: PropTypes.array.isRequired,\n  onEditProfile: PropTypes.func.isRequired,\n  onAddCard: PropTypes.func.isRequired,\n  onEditAvatar: PropTypes.func.isRequired,\n  onCardClick: PropTypes.func.isRequired,\n  onCardLike: PropTypes.func.isRequired,\n  onCardDelete: PropTypes.func.isRequired\n};\n\nexport default Main;\n","function Footer() {\n  return (\n    <footer className='footer'>\n      <p className='footer__copyright'>&copy; {new Date().getFullYear()} Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import PropTypes from 'prop-types';\r\n\r\nfunction ImagePopup(props) {\r\n  const {\r\n    card,\r\n    onClose,\r\n  } = props;\r\n\r\n  return (\r\n    <section className={`popup popup-image popup_theme_black ${card ? 'popup_opened' : ''}`}>\r\n      <div className='popup__container'>\r\n        <figure className='popup__image-container'>\r\n          <img className='popup__image' src={card?.link} alt={card?.name} />\r\n          <figcaption className='popup__image-caption'>{card?.name}</figcaption>\r\n        </figure>\r\n        <button className='button popup__button-close' type='button' aria-label='Закрыть' onClick={onClose}></button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nImagePopup.propTypes = {\r\n  card: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    link: PropTypes.string.isRequired,\r\n  }),\r\n  onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ImagePopup;\r\n","import PropTypes from 'prop-types';\n\nfunction PopupWithForm(props) {\n  const {\n    isOpen,\n    onClose,\n    onSubmit,\n    name,\n    title,\n    btnSubmitCaption,\n    children\n  } = props;\n\n  return (\n    <section className={`popup popup-${name} ${isOpen ? 'popup_opened' : ''}`}>\n      <div className='popup__container'>\n        <form className={`form form-${name}`} name={`form-${name}`} onSubmit={onSubmit}>\n          <h2 className='form__heading'>{title}</h2>\n          {children}\n          <button className='form__button-submit' type='submit'>{btnSubmitCaption}</button>\n        </form>\n        <button className='button popup__button-close' type='button' aria-label='Закрыть' onClick={onClose}></button>\n      </div>\n    </section>\n  );\n}\n\nPopupWithForm.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  btnSubmitCaption: PropTypes.string.isRequired,\n  children: PropTypes.node\n};\n\nexport default PopupWithForm;\n","import { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\n\nconst FormField = forwardRef((props, ref) => {\n  const name = props.name;\n\n  return (\n    <label className='form__field'>\n      <input className='form__input' id={name} ref={ref} {...props} />\n      <span className={`form__input-error ${name}-error`}></span>\n    </label>\n  );\n});\n\nFormField.defaultProps = {\n  required: true\n};\n\nFormField.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  minLength: PropTypes.number,\n  maxLength: PropTypes.number,\n  required: PropTypes.bool\n};\n\nexport default FormField;\n","import { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport PopupWithForm from './PopupWithForm';\nimport FormField from './FormField';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup(props) {\n  const {\n    isOpen,\n    onClose,\n    onUpdateUser\n  } = props;\n\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n\n  const currentUser = useContext(CurrentUserContext);\n\n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  const handleNameChange = (evt) => setName(evt.target.value);\n  const handleDescriptionChange = (evt) => setDescription(evt.target.value);\n\n  const handleClose = () => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n    onClose();\n  }\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    onUpdateUser({\n      name,\n      about: description\n    });\n  }\n\n  return (\n    <PopupWithForm\n      isOpen={isOpen}\n      onClose={handleClose}\n      onSubmit={handleSubmit}\n      name='profile'\n      title='Редактировать профиль'\n      btnSubmitCaption='Сохранить'\n    >\n      <FormField type='text' name='profile-name' value={name || ''} onChange={handleNameChange} placeholder='Имя' minLength={2} maxLength={40} />\n      <FormField type='text' name='profile-job' value={description || ''} onChange={handleDescriptionChange} placeholder='О себе' minLength={2} maxLength={200} />\n    </PopupWithForm>\n  );\n}\n\nEditProfilePopup.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onUpdateUser: PropTypes.func.isRequired\n};\n\nexport default EditProfilePopup;\n","import { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport PopupWithForm from './PopupWithForm';\nimport FormField from './FormField';\n\nfunction EditAvatarPopup(props) {\n  const {\n    isOpen,\n    onClose,\n    onUpdateAvatar\n  } = props;\n\n  const avatarRef = useRef();\n\n  useEffect(() => {\n    if (!isOpen) {\n      avatarRef.current.value = '';\n    }\n  }, [isOpen]);\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    onUpdateAvatar(avatarRef.current.value);\n  }\n\n  return (\n    <PopupWithForm\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      name='avatar'\n      title='Обновить аватар'\n      btnSubmitCaption='Сохранить'\n    >\n      <FormField type='url' name='avatar-link' placeholder='Ссылка на аватар' ref={avatarRef} />\n    </PopupWithForm>\n  );\n}\n\nEditAvatarPopup.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onUpdateAvatar: PropTypes.func.isRequired\n};\n\nexport default EditAvatarPopup;\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport PopupWithForm from './PopupWithForm';\nimport FormField from './FormField';\n\nfunction AddPlacePopup(props) {\n  const {\n    isOpen,\n    onClose,\n    onAddCard\n  } = props;\n\n  const [name, setName] = useState('');\n  const [link, setLink] = useState('');\n\n  const handleNameChange = (evt) => setName(evt.target.value);\n  const handleLinkChange = (evt) => setLink(evt.target.value);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setName('');\n      setLink('');\n    }\n  }, [isOpen]);\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    onAddCard({ name,link });\n  }\n\n  return (\n    <PopupWithForm\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      name='card'\n      title='Новое место'\n      btnSubmitCaption='Создать'\n    >\n      <FormField type='text' name='card-name' value={name || ''} onChange={handleNameChange} placeholder='Название' minLength={2} maxLength={30} />\n      <FormField type='url' name='card-link' value={link || ''} onChange={handleLinkChange} placeholder='Ссылка на картинку' />\n    </PopupWithForm>\n  );\n}\n\nAddPlacePopup.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onAddCard: PropTypes.func.isRequired\n};\n\nexport default AddPlacePopup;\n","import { apiOptions } from './constants';\n\nclass Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _promiseHandler(promise) {\n    return promise\n      .then(res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`));\n  }\n\n  getUserInfo() {\n    return this._promiseHandler(fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }));\n  }\n\n  setUserInfo(name, about) {\n    return this._promiseHandler(fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }));\n  }\n\n  setUserAvatar(avatar) {\n    return this._promiseHandler(fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatar\n      })\n    }));\n  }\n\n  getInitialCards() {\n    return this._promiseHandler(fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }));\n  }\n\n  addCard(name, link) {\n    return this._promiseHandler(fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }));\n  }\n\n  deleteCard(cardId) {\n    return this._promiseHandler(fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }));\n  }\n\n  changeCardLikeStatus(cardId, isLiked) {\n    return isLiked\n      ? this._promiseHandler(fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n        method: 'DELETE',\n        headers: this._headers\n      }))\n      : this._promiseHandler(fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n          method: 'PUT',\n          headers: this._headers\n        }));\n  }\n}\n\nexport default new Api(apiOptions);\n","export const apiOptions = {\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-26',\n  headers: {\n    authorization: '367be849-b9d8-44df-8a90-129746dbd13f',\n    'Content-Type': 'application/json'\n  }\n}\n","import { useEffect, useState } from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport ImagePopup from './ImagePopup';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport api from '../utils/api';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction App() {\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  const [cards, setCards] = useState([]);\r\n\r\n  const [isPopupProfileOpen, setIsPopupProfileOpen] = useState(false);\r\n  const [isPopupCardOpen, setIsPopupCardOpen] = useState(false);\r\n  const [isPopupAvatarOpen, setIsPopupAvatarOpen] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n\r\n  const handleButtonEditProfileClick = () => setIsPopupProfileOpen(true);\r\n  const handleButtonAddCardClick = () => setIsPopupCardOpen(true);\r\n  const handleButtonEditAvatarClick = () => setIsPopupAvatarOpen(true);\r\n\r\n  const closeAllPopups = () => {\r\n    setIsPopupProfileOpen(false);\r\n    setIsPopupCardOpen(false);\r\n    setIsPopupAvatarOpen(false);\r\n    setSelectedCard(null);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const promises = [api.getUserInfo(), api.getInitialCards()];\r\n\r\n    Promise.all(promises)\r\n      .then(([userInfo, initialCards]) => {\r\n        setCurrentUser(userInfo);\r\n        setCards(initialCards);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n\r\n  const handleCardLike = (card) => {\r\n    const isLiked = card.likes.some(like => like._id === currentUser._id);\r\n\r\n    api.changeCardLikeStatus(card._id, isLiked)\r\n      .then(newCard => {\r\n        setCards(cards => cards.map(currCard => currCard._id === card._id ? newCard : currCard));\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  const handleCardDelete = (card) => {\r\n    api.deleteCard(card._id)\r\n      .then(() => {\r\n        setCards(cards.filter(currCard => currCard._id !== card._id))\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  const handleUpdateUser = ({name, about}) => {\r\n    api.setUserInfo(name, about)\r\n    .then(userInfo => {\r\n      setCurrentUser(userInfo);\r\n      closeAllPopups();\r\n    })\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n  const handleUpdateAvatar = (avatar) => {\r\n    api.setUserAvatar(avatar)\r\n      .then(userInfo => {\r\n        setCurrentUser(userInfo);\r\n        closeAllPopups();\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  const handleAddCard = ({name, link}) => {\r\n    api.addCard(name, link)\r\n      .then(newCard => {\r\n        setCards([newCard, ...cards]);\r\n        closeAllPopups();\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <Header />\r\n      <Main\r\n        cards={cards}\r\n        onEditProfile={handleButtonEditProfileClick}\r\n        onAddCard={handleButtonAddCardClick}\r\n        onEditAvatar={handleButtonEditAvatarClick}\r\n        onCardClick={setSelectedCard}\r\n        onCardLike={handleCardLike}\r\n        onCardDelete={handleCardDelete}\r\n      />\r\n      <Footer />\r\n\r\n      <EditProfilePopup\r\n        isOpen={isPopupProfileOpen}\r\n        onClose={closeAllPopups}\r\n        onUpdateUser={handleUpdateUser}\r\n      />\r\n\r\n      <AddPlacePopup\r\n        isOpen={isPopupCardOpen}\r\n        onClose={closeAllPopups}\r\n        onAddCard={handleAddCard}\r\n      />\r\n\r\n      <EditAvatarPopup\r\n        isOpen={isPopupAvatarOpen}\r\n        onClose={closeAllPopups}\r\n        onUpdateAvatar={handleUpdateAvatar}\r\n      />\r\n\r\n      <ImagePopup\r\n        card={selectedCard}\r\n        onClose={closeAllPopups}\r\n      />\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}