{"version":3,"sources":["contexts/AppContext.js","components/Card.js","images/header-logo.svg","utils/constants.js","components/HeaderMenu.js","components/Header.js","components/Footer.js","components/Main.js","components/ImagePopup.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","images/res-success.svg","images/res-failure.svg","components/InfoTooltip.js","components/Register.js","components/Login.js","components/ProtectedRoute.js","utils/api.js","utils/auth.js","components/App.js","index.js"],"names":["AppContext","createContext","Card","props","data","name","link","likes","owner","currentUser","useContext","isOwn","_id","isLiked","some","like","className","src","alt","onClick","onCardClick","type","onCardLike","aria-label","length","onCardDelete","authOptions","baseUrl","appRoutes","HeaderMenu","hst","useHistory","user","handleLogout","isMobile","isInactive","loggedIn","email","localStorage","removeItem","push","location","pathname","to","Header","useState","isActiveMenu","setIsActiveMenu","window","innerWidth","setIsMobile","resizeWindow","useCallback","isMobileNew","useEffect","addEventListener","removeEventListener","headerLogo","Footer","Date","getFullYear","Main","cards","onEditProfile","onAddCard","onEditAvatar","avatar","about","map","card","ImagePopup","onClose","PopupWithForm","isOpen","onSubmit","title","btnSubmitCaption","children","EditProfilePopup","onUpdateUser","setName","description","setDescription","evt","preventDefault","value","onChange","target","placeholder","minLength","maxLength","required","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","ref","AddPlacePopup","setLink","InfoTooltip","isError","resFailure","resSuccess","Register","handleRegister","registerData","setRegisterData","handleChange","password","Login","handleAuthorize","loginData","setLoginData","ProtectedRoute","Component","component","otherProps","options","this","_baseUrl","_headers","headers","promise","then","res","ok","json","Promise","reject","status","_promiseHandler","fetch","method","body","JSON","stringify","cardId","authorization","authorize","getContent","token","App","setCurrentUser","setCards","isPopupProfileOpen","setIsPopupProfileOpen","isPopupCardOpen","setIsPopupCardOpen","isPopupAvatarOpen","setIsPopupAvatarOpen","isInfoTooltipOpen","setIsInfoTooltipOpen","selectedCard","setSelectedCard","setLoggedIn","setIsError","closeAllPopups","showInfoToolTip","loadData","jwt","getItem","promises","auth","api","getUserInfo","getInitialCards","all","authInfo","userInfo","initialCards","catch","closeByEscape","key","document","Provider","setItem","register","exact","path","changeCardLikeStatus","newCard","currCard","err","console","log","deleteCard","filter","setUserInfo","addCard","setUserAvatar","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.288744c4.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const AppContext = createContext();\n","import { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { AppContext } from '../contexts/AppContext';\n\nfunction Card(props) {\n  const {\n    name,\n    link,\n    likes,\n    owner\n  } = props.data;\n\n  const currentUser = useContext(AppContext).currentUser;\n\n  const isOwn = owner._id === currentUser._id;\n  const isLiked = likes.some(like => like._id === currentUser._id);\n\n  const handleCardClick = () => props.onCardClick({ name, link });\n  const handleLikeClick = () => props.onCardLike(props.data);\n  const handleDeleteClick = () => props.onCardDelete(props.data);\n\n  return (\n    <li className='cards__item'>\n      <img className='cards__image' src={link} alt={name} onClick={handleCardClick} />\n      <h2 className='cards__title'>{name}</h2>\n        <div className='cards__like-container'>\n          <button\n            className={`cards__button-like ${isLiked ? ' cards__button-like_active' : ''}`}\n            type='button'\n            onClick={handleLikeClick}\n            aria-label='Оценить'\n          >\n          </button>\n          <span className='cards__like-counter'>{likes.length}</span>\n        </div>\n      {isOwn &&\n        <button\n          className='button cards__button-delete'\n          type='button'\n          onClick={handleDeleteClick}\n          aria-label='Удалить'>\n        </button>}\n    </li>\n  );\n}\n\nCard.propTypes = {\n  data: PropTypes.object.isRequired,\n  onCardClick: PropTypes.func.isRequired,\n  onCardLike: PropTypes.func.isRequired,\n  onCardDelete: PropTypes.func.isRequired\n};\n\nexport default Card;\n","export default __webpack_public_path__ + \"static/media/header-logo.bbe2a6ea.svg\";","export const apiOptions = {\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-26',\n  headers: {\n    authorization: '367be849-b9d8-44df-8a90-129746dbd13f',\n    'Content-Type': 'application/json'\n  }\n}\n\nexport const authOptions = {\n  baseUrl: 'https://auth.nomoreparties.co'\n}\n\nexport const appRoutes = {\n  root: '/',\n  signIn: '/sign-in',\n  signUp: '/sign-up'\n}\n","import { Link, useHistory } from 'react-router-dom';\nimport { appRoutes } from '../utils/constants';\nimport PropTypes from 'prop-types';\nimport { useContext } from 'react';\nimport { AppContext } from '../contexts/AppContext';\n\nconst HeaderMenu = (props) => {\n  const hst = useHistory();\n  const user = useContext(AppContext).currentUser;\n  const handleLogout = useContext(AppContext).handleLogout;\n\n  const { isMobile, isInactive, loggedIn } = props;\n\n  const signOut = () => {\n    localStorage.removeItem('jwt');\n    handleLogout();\n    hst.push(appRoutes.signIn);\n  }\n\n  return (\n    <nav\n      className={`header__menu${\n        isInactive && isMobile ? ' header__menu_inactive' : ''\n      }${isMobile ? ' header__menu_mobile' : ''}`}\n    >\n      {loggedIn && <h2 className='header__menu-heading'>{user.email}</h2>}\n      <ul className='header__menu-links'>\n        {loggedIn ? (\n          <li><button className='link header__menu-link header__menu-button' onClick={signOut}>Выйти</button></li>\n        ) : hst.location.pathname === appRoutes.signIn ? (\n          <li>\n            <Link className='link header__menu-link' to={appRoutes.signUp}>\n              Регистрация\n            </Link>\n          </li>\n        ) : (\n          <li>\n            <Link className='link header__menu-link' to={appRoutes.signIn}>\n              Войти\n            </Link>\n          </li>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nHeaderMenu.propTypes = {\n  isMobile: PropTypes.bool.isRequired,\n  isInactive: PropTypes.bool.isRequired,\n  loggedIn: PropTypes.bool.isRequired,\n};\n\nexport default HeaderMenu;\n","import { useState, useEffect, useCallback } from 'react';\nimport headerLogo from '../images/header-logo.svg';\nimport HeaderMenu from './HeaderMenu';\nimport { useContext } from 'react';\nimport { AppContext } from '../contexts/AppContext';\n\nconst MAX_MOBILE_WIDTH = 767;\n\nfunction Header() {\n  const loggedIn = useContext(AppContext).loggedIn;\n\n  const [isActiveMenu, setIsActiveMenu] = useState(false);\n  const [isMobile, setIsMobile] = useState(\n    window.innerWidth <= MAX_MOBILE_WIDTH\n  );\n\n  const resizeWindow = useCallback(() => {\n    const isMobileNew = window.innerWidth <= MAX_MOBILE_WIDTH;\n    if (isMobileNew !== isMobile) {\n      setIsMobile(isMobileNew);\n    }\n  }, [isMobile]);\n\n  useEffect(() => {\n    window.addEventListener('resize', resizeWindow);\n\n    return () => window.removeEventListener('resize', resizeWindow);\n  }, [resizeWindow]);\n\n  const handleBurgerClick = () => {\n    setIsActiveMenu(!isActiveMenu);\n  };\n\n  return (\n    <header className='header'>\n      <div className='header__containter'>\n        <img className='header__logo' src={headerLogo} alt='Место: Россия' />\n        {loggedIn ? (\n          <div\n            className={`button header__burger${isActiveMenu ? ' header__burger_active' : ''}`}\n            onClick={handleBurgerClick}\n          >\n            <span className={`header__burger-item${isActiveMenu ? ' header__burger-item_active' : ''}`}></span>\n          </div>\n        ) : (\n          <HeaderMenu isMobile={false} isInactive={false} loggedIn={false} />\n        )}\n      </div>\n      {loggedIn && <HeaderMenu isMobile={isMobile} isInactive={!isActiveMenu} loggedIn={loggedIn} />}\n    </header>\n  );\n}\n\nexport default Header;\n","function Footer() {\n  return (\n    <footer className='footer'>\n      <p className='footer__copyright'>&copy; {new Date().getFullYear()} Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Card from './Card';\nimport Header from './Header';\nimport Footer from './Footer';\nimport { AppContext } from '../contexts/AppContext';\n\nfunction Main(props) {\n  const {\n    cards,\n    onEditProfile,\n    onAddCard,\n    onEditAvatar,\n    onCardClick,\n    onCardLike,\n    onCardDelete\n  } = props;\n\n  const currentUser = useContext(AppContext).currentUser;\n  const loggedIn = useContext(AppContext).loggedIn;\n\n  return (\n    <>\n      <Header loggedIn={loggedIn} />\n      <main className='content'>\n        <section className='profile'>\n          <button className='profile__button-edit-avatar' type='button' aria-label='Обновить аватар' onClick={onEditAvatar}>\n            <img className='profile__avatar' src={currentUser?.avatar} alt='Аватар' />\n          </button>\n          <div className='profile__info'>\n            <div className='profile__container'>\n              <h1 className='profile__name'>{currentUser?.name}</h1>\n              <button className='button profile__button-edit-profile' type='button' aria-label='Редактировать профиль' onClick={onEditProfile}></button>\n            </div>\n            <p className='profile__job'>{currentUser?.about}</p>\n          </div>\n          <button className='button profile__button-add-card' type='button' aria-label='Добавить карточку' onClick={onAddCard}></button>\n        </section>\n\n        <section className='cards'>\n          <ul className='cards__list'>\n            {cards.map(card => (\n              <Card\n                key={card._id}\n                data={card}\n                onCardClick={onCardClick}\n                onCardLike={onCardLike}\n                onCardDelete={onCardDelete}\n              />\n            ))}\n          </ul>\n        </section>\n      </main>\n      <Footer />\n    </>\n  );\n}\n\nMain.propTypes = {\n  cards: PropTypes.array.isRequired,\n  onEditProfile: PropTypes.func.isRequired,\n  onAddCard: PropTypes.func.isRequired,\n  onEditAvatar: PropTypes.func.isRequired,\n  onCardClick: PropTypes.func.isRequired,\n  onCardLike: PropTypes.func.isRequired,\n  onCardDelete: PropTypes.func.isRequired\n};\n\nexport default Main;\n","import PropTypes from 'prop-types';\r\n\r\nfunction ImagePopup(props) {\r\n  const {\r\n    card,\r\n    onClose,\r\n  } = props;\r\n\r\n  return (\r\n    <section className={`popup popup-image popup_theme_black ${card ? 'popup_opened' : ''}`}>\r\n      <div className='popup__container'>\r\n        <figure className='popup__image-container'>\r\n          <img className='popup__image' src={card?.link} alt={card?.name} />\r\n          <figcaption className='popup__image-caption'>{card?.name}</figcaption>\r\n        </figure>\r\n        <button className='button popup__button-close' type='button' aria-label='Закрыть' onClick={onClose}></button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nImagePopup.propTypes = {\r\n  card: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    link: PropTypes.string.isRequired,\r\n  }),\r\n  onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ImagePopup;\r\n","import PropTypes from 'prop-types';\n\nfunction PopupWithForm(props) {\n  const {\n    isOpen,\n    onClose,\n    onSubmit,\n    name,\n    title,\n    btnSubmitCaption,\n    children\n  } = props;\n\n  return (\n    <section className={`popup popup-${name}${isOpen ? ' popup_opened' : ''}`}>\n      <div className='popup__container'>\n        <form className={`form form-${name}`} name={`form-${name}`} onSubmit={onSubmit}>\n          <h2 className='form__heading'>{title}</h2>\n          {children}\n          <button className='form__button-submit' type='submit'>{btnSubmitCaption}</button>\n        </form>\n        <button className='button popup__button-close' type='button' aria-label='Закрыть' onClick={onClose}></button>\n      </div>\n    </section>\n  );\n}\n\nPopupWithForm.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  btnSubmitCaption: PropTypes.string.isRequired,\n  children: PropTypes.node\n};\n\nexport default PopupWithForm;\n","import { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport PopupWithForm from './PopupWithForm';\nimport { AppContext } from '../contexts/AppContext';\n\nfunction EditProfilePopup(props) {\n  const {\n    isOpen,\n    onClose,\n    onUpdateUser\n  } = props;\n\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n\n  const currentUser = useContext(AppContext).currentUser;\n\n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, isOpen]);\n\n  const handleNameChange = (evt) => setName(evt.target.value);\n  const handleDescriptionChange = (evt) => setDescription(evt.target.value);\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    onUpdateUser({\n      name,\n      about: description\n    });\n  }\n\n  return (\n    <PopupWithForm\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      name='profile'\n      title='Редактировать профиль'\n      btnSubmitCaption='Сохранить'\n    >\n      <input className='form__input' type='text' name='profile-name' value={name || ''} onChange={handleNameChange} placeholder='Имя' minLength={2} maxLength={40} required />\n      <input className='form__input' type='text' name='profile-job' value={description || ''} onChange={handleDescriptionChange} placeholder='О себе' minLength={2} maxLength={200} required />\n    </PopupWithForm>\n  );\n}\n\nEditProfilePopup.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onUpdateUser: PropTypes.func.isRequired\n};\n\nexport default EditProfilePopup;\n","import { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup(props) {\n  const {\n    isOpen,\n    onClose,\n    onUpdateAvatar\n  } = props;\n\n  const avatarRef = useRef();\n\n  useEffect(() => {\n    if (!isOpen) {\n      avatarRef.current.value = '';\n    }\n  }, [isOpen]);\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    onUpdateAvatar(avatarRef.current.value);\n  }\n\n  return (\n    <PopupWithForm\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      name='avatar'\n      title='Обновить аватар'\n      btnSubmitCaption='Сохранить'\n    >\n      <input className='form__input' type='url' name='avatar-link' placeholder='Ссылка на аватар' ref={avatarRef} required />\n    </PopupWithForm>\n  );\n}\n\nEditAvatarPopup.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onUpdateAvatar: PropTypes.func.isRequired\n};\n\nexport default EditAvatarPopup;\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup(props) {\n  const {\n    isOpen,\n    onClose,\n    onAddCard\n  } = props;\n\n  const [name, setName] = useState('');\n  const [link, setLink] = useState('');\n\n  const handleNameChange = (evt) => setName(evt.target.value);\n  const handleLinkChange = (evt) => setLink(evt.target.value);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setName('');\n      setLink('');\n    }\n  }, [isOpen]);\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    onAddCard({ name,link });\n  }\n\n  return (\n    <PopupWithForm\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      name='card'\n      title='Новое место'\n      btnSubmitCaption='Создать'\n    >\n      <input className='form__input' type='text' name='card-name' value={name || ''} onChange={handleNameChange} placeholder='Название' minLength={2} maxLength={30} required />\n      <input className='form__input' type='url' name='card-link' value={link || ''} onChange={handleLinkChange} placeholder='Ссылка на картинку' required />\n    </PopupWithForm>\n  );\n}\n\nAddPlacePopup.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onAddCard: PropTypes.func.isRequired\n};\n\nexport default AddPlacePopup;\n","export default __webpack_public_path__ + \"static/media/res-success.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/res-failure.df8eddf6.svg\";","import PropTypes from 'prop-types';\nimport resSuccess from '../images/res-success.svg';\nimport resFailure from '../images/res-failure.svg';\n\nconst InfoTooltip = (props) => {\n  const {\n    isOpen,\n    isError,\n    onClose\n  } = props;\n\n  return (\n    <section className={`popup${isOpen ? ' popup_opened' : ''}`}>\n      <div className='popup__container'>\n        <div className='tooltip'>\n          <img className='tooltip__image' src={isError ? resFailure : resSuccess} alt={isError ? 'Ошибка' : 'Успех'} />\n          <p className='tooltip__heading'>{isError ? 'Что-то пошло не так! Попробуйте ещё раз.' : 'Вы успешно зарегистрировались!'}</p>\n        </div>\n        <button className='button popup__button-close' type='button' aria-label='Закрыть' onClick={onClose}></button>\n      </div>\n    </section>\n  );\n}\n\nInfoTooltip.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  isError: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired\n};\n\nexport default InfoTooltip;\n","import { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppContext } from '../contexts/AppContext';\nimport { appRoutes } from '../utils/constants';\nimport Header from './Header';\n\nconst Register = () => {\n  const handleRegister = useContext(AppContext).handleRegister;\n\n  const [registerData, setRegisterData] = useState({});\n  const handleChange = (evt) => {\n    setRegisterData({\n      ...registerData,\n      [evt.target.name]: evt.target.value,\n    });\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    handleRegister(registerData);\n  };\n\n  return (\n    <>\n      <Header />\n      <section className='register'>\n        <form\n          className='form form_theme_dark'\n          name='form-register'\n          onSubmit={handleSubmit}\n        >\n          <h2 className='form__heading form__heading_theme_dark'>\n            Регистрация\n          </h2>\n          <input\n            className='form__input form__input_theme_dark'\n            name='email'\n            type='email'\n            placeholder='Email'\n            value={registerData.email || ''}\n            onChange={handleChange}\n            required\n          />\n          <input\n            className='form__input form__input_theme_dark'\n            name='password'\n            type='password'\n            placeholder='Пароль'\n            minLength={8}\n            maxLength={15}\n            value={registerData.password || ''}\n            onChange={handleChange}\n            required\n          />\n          <button\n            className='form__button-submit form__button-submit_theme_dark'\n            type='submit'\n          >\n            Зарегистрироваться\n          </button>\n        </form>\n        <div className='register__signin'>\n          <p className='register__question'>Уже зарегистрированы?</p>\n          <Link className='link register__link' to={appRoutes.signIn}>\n            Войти\n          </Link>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Register;\n","import { useState, useContext } from 'react';\nimport { AppContext } from '../contexts/AppContext';\nimport Header from './Header';\n\nconst Login = () => {\n  const handleAuthorize = useContext(AppContext).handleAuthorize;\n\n  const [loginData, setLoginData] = useState({});\n  const handleChange = (evt) => {\n    setLoginData({\n      ...loginData,\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    handleAuthorize(loginData);\n  }\n\n  return (\n    <>\n      <Header />\n      <section className='login'>\n        <form\n          className='form form_theme_dark'\n          name='form-login'\n          onSubmit={handleSubmit}\n        >\n          <h2 className='form__heading form__heading_theme_dark'>Вход</h2>\n          <input\n            className='form__input form__input_theme_dark'\n            name='email'\n            type='email'\n            placeholder='Email'\n            value={loginData.email || ''}\n            onChange={handleChange}\n            required\n          />\n          <input\n            className='form__input form__input_theme_dark'\n            name='password'\n            type='password'\n            placeholder='Пароль'\n            minLength={8}\n            maxLength={15}\n            value={loginData.password || ''}\n            onChange={handleChange}\n            required\n          />\n          <button\n            className='form__button-submit form__button-submit_theme_dark'\n            type='submit'\n          >\n            Войти\n          </button>\n        </form>\n      </section>\n    </>\n  );\n};\n\nexport default Login;\n","import { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { appRoutes } from '../utils/constants';\n\nconst ProtectedRoute = ({ component: Component, ...otherProps }) => {\n  const loggedIn = otherProps.loggedIn;\n\n  return (\n    <Route>\n      {loggedIn ? <Component {...otherProps} /> : <Redirect to={appRoutes.signIn} /> }\n    </Route>\n  );\n}\n\nProtectedRoute.propTypes = {\n  loggedIn: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired\n};\n\nexport default ProtectedRoute;\n","import { apiOptions } from './constants';\n\nclass Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _promiseHandler(promise) {\n    return promise\n      .then(res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`));\n  }\n\n  getUserInfo() {\n    return this._promiseHandler(fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }));\n  }\n\n  setUserInfo(name, about) {\n    return this._promiseHandler(fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }));\n  }\n\n  setUserAvatar(avatar) {\n    return this._promiseHandler(fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatar\n      })\n    }));\n  }\n\n  getInitialCards() {\n    return this._promiseHandler(fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }));\n  }\n\n  addCard(name, link) {\n    return this._promiseHandler(fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }));\n  }\n\n  deleteCard(cardId) {\n    return this._promiseHandler(fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }));\n  }\n\n  changeCardLikeStatus(cardId, isLiked) {\n    return isLiked\n      ? this._promiseHandler(fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n        method: 'DELETE',\n        headers: this._headers\n      }))\n      : this._promiseHandler(fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n          method: 'PUT',\n          headers: this._headers\n        }));\n  }\n}\n\nexport default new Api(apiOptions);\n","import { authOptions } from './constants';\n\nclass Auth {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n  }\n\n  _promiseHandler(promise) {\n    return promise\n      .then(res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`));\n  }\n\n  register(email, password) {\n    return this._promiseHandler(fetch(`${authOptions.baseUrl}/signup`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({email, password})\n    }));\n  }\n\n  authorize = (email, password) => {\n    return this._promiseHandler(fetch(`${authOptions.baseUrl}/signin`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({email, password})\n    }));\n  }\n\n  getContent = (token) => {\n    return this._promiseHandler(fetch(`${authOptions.baseUrl}/users/me`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n      }\n    }));\n  }\n}\n\nexport default new Auth(authOptions);\n","import { useCallback, useEffect, useState } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport Main from './Main';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport InfoTooltip from './InfoTooltip';\nimport Register from './Register';\nimport Login from './Login';\nimport ProtectedRoute from './ProtectedRoute';\nimport api from '../utils/api';\nimport auth from '../utils/auth';\nimport { AppContext } from '../contexts/AppContext';\nimport { appRoutes } from '../utils/constants';\nimport { useHistory } from 'react-router-dom';\n\nfunction App() {\n  const hst = useHistory();\n\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n\n  const [isPopupProfileOpen, setIsPopupProfileOpen] = useState(false);\n  const [isPopupCardOpen, setIsPopupCardOpen] = useState(false);\n  const [isPopupAvatarOpen, setIsPopupAvatarOpen] = useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const handleButtonEditProfileClick = () => setIsPopupProfileOpen(true);\n  const handleButtonAddCardClick = () => setIsPopupCardOpen(true);\n  const handleButtonEditAvatarClick = () => setIsPopupAvatarOpen(true);\n\n  const closeAllPopups = () => {\n    setIsPopupProfileOpen(false);\n    setIsPopupCardOpen(false);\n    setIsPopupAvatarOpen(false);\n    setIsInfoTooltipOpen(false);\n    setSelectedCard(null);\n  }\n\n  const showInfoToolTip = (isError) => {\n    setIsError(isError);\n    setIsInfoTooltipOpen(true);\n  };\n\n  const loadData = useCallback(() => {\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      const promises = [auth.getContent(jwt), api.getUserInfo(), api.getInitialCards()];\n\n      Promise.all(promises)\n      .then(([authInfo, userInfo, initialCards]) => {\n        setCurrentUser({\n          ...userInfo,\n          email: authInfo.data.email\n        });\n        setCards(initialCards);\n        setLoggedIn(true);\n        hst.push(appRoutes.root);\n      })\n      .catch(() => showInfoToolTip(true));\n    }\n  }, [hst]);\n\n  useEffect(() => {\n    const closeByEscape = (evt) => {\n      if (evt.key === 'Escape') {\n        closeAllPopups();\n      }\n    }\n\n    document.addEventListener('keydown', closeByEscape);\n\n    return () => document.removeEventListener('keydown', closeByEscape);\n  }, []);\n\n  useEffect(() => {\n    loadData();\n  }, [loadData, hst]);\n\n  const handleCardLike = (card) => {\n    const isLiked = card.likes.some(like => like._id === currentUser._id);\n\n    api.changeCardLikeStatus(card._id, isLiked)\n      .then(newCard => {\n        setCards(cards => cards.map(currCard => currCard._id === card._id ? newCard : currCard));\n      })\n      .catch(err => console.log(err));\n  }\n\n  const handleCardDelete = (card) => {\n    api.deleteCard(card._id)\n      .then(() => {\n        setCards(cards.filter(currCard => currCard._id !== card._id))\n      })\n      .catch(err => console.log(err));\n  }\n\n  const handleUpdateUser = ({name, about}) => {\n    api.setUserInfo(name, about)\n    .then(userInfo => {\n      setCurrentUser({\n        ...currentUser,\n        ...userInfo\n      });\n      closeAllPopups();\n    })\n    .catch(err => console.log(err));\n  }\n\n  const handleUpdateAvatar = (avatar) => {\n    api.setUserAvatar(avatar)\n      .then(userInfo => {\n        setCurrentUser({\n          ...currentUser,\n          ...userInfo\n        });\n        closeAllPopups();\n      })\n      .catch(err => console.log(err));\n  }\n\n  const handleAddCard = ({name, link}) => {\n    api.addCard(name, link)\n      .then(newCard => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err));\n  }\n\n  const handleRegister = ({ email, password }) => {\n    auth.register(email, password)\n    .then(() => {\n      hst.push(appRoutes.signIn);\n      showInfoToolTip(false);\n    })\n    .catch(() => {\n      showInfoToolTip(true);\n    });\n  };\n\n  const handleAuthorize = ({ email, password }) => {\n    auth.authorize(email, password)\n    .then(data => {\n      if (data.token) {\n        localStorage.setItem('jwt', data.token);\n        loadData();\n      } else {\n        showInfoToolTip(true);\n      }\n    })\n    .catch(() => {\n      showInfoToolTip(true);\n    });\n  }\n\n  const handleLogout = () => setLoggedIn(false);\n\n  return (\n    <AppContext.Provider value={{currentUser, loggedIn, showInfoToolTip, handleAuthorize, handleRegister, handleLogout}}>\n      <Switch>\n        <ProtectedRoute\n          exact\n          path={appRoutes.root}\n          loggedIn={loggedIn}\n          cards={cards}\n          onEditProfile={handleButtonEditProfileClick}\n          onAddCard={handleButtonAddCardClick}\n          onEditAvatar={handleButtonEditAvatarClick}\n          onCardClick={setSelectedCard}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n          component={Main}\n        />\n        <Route exact path={appRoutes.signUp}>\n          {loggedIn ? <Redirect to={appRoutes.root} />  : <Register />}\n        </Route>\n        <Route exact path={appRoutes.signIn}>\n          {loggedIn ? <Redirect to={appRoutes.root} /> : <Login />}\n        </Route>\n      </Switch>\n\n      <EditProfilePopup\n        isOpen={isPopupProfileOpen}\n        onClose={closeAllPopups}\n        onUpdateUser={handleUpdateUser}\n      />\n\n      <AddPlacePopup\n        isOpen={isPopupCardOpen}\n        onClose={closeAllPopups}\n        onAddCard={handleAddCard}\n      />\n\n      <EditAvatarPopup\n        isOpen={isPopupAvatarOpen}\n        onClose={closeAllPopups}\n        onUpdateAvatar={handleUpdateAvatar}\n      />\n\n      <ImagePopup\n        card={selectedCard}\n        onClose={closeAllPopups}\n      />\n\n      <InfoTooltip\n        isOpen={isInfoTooltipOpen}\n        isError={isError}\n        onClose={closeAllPopups}\n      />\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}